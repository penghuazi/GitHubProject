<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.legend.dao.AmmeterReportMapper" >
  <resultMap id="BaseResultMap" type="com.legend.dao.domain.AmmeterReport" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ammeter_id" property="ammeterId" jdbcType="INTEGER" />
    <result column="active_energy" property="activeEnergy" jdbcType="VARCHAR" />
    <result column="reactive_energy" property="reactiveEnergy" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ammeter_id, active_energy, reactive_energy, send_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ammeter_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ammeter_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.legend.dao.domain.AmmeterReport" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ammeter_report (ammeter_id, active_energy, reactive_energy, 
      send_time)
    values (#{ammeterId,jdbcType=INTEGER}, #{activeEnergy,jdbcType=VARCHAR}, #{reactiveEnergy,jdbcType=VARCHAR}, 
      #{sendTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.legend.dao.domain.AmmeterReport" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ammeter_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ammeterId != null" >
        ammeter_id,
      </if>
      <if test="activeEnergy != null" >
        active_energy,
      </if>
      <if test="reactiveEnergy != null" >
        reactive_energy,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ammeterId != null" >
        #{ammeterId,jdbcType=INTEGER},
      </if>
      <if test="activeEnergy != null" >
        #{activeEnergy,jdbcType=VARCHAR},
      </if>
      <if test="reactiveEnergy != null" >
        #{reactiveEnergy,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.legend.dao.domain.AmmeterReport" >
    update ammeter_report
    <set >
      <if test="ammeterId != null" >
        ammeter_id = #{ammeterId,jdbcType=INTEGER},
      </if>
      <if test="activeEnergy != null" >
        active_energy = #{activeEnergy,jdbcType=VARCHAR},
      </if>
      <if test="reactiveEnergy != null" >
        reactive_energy = #{reactiveEnergy,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.legend.dao.domain.AmmeterReport" >
    update ammeter_report
    set ammeter_id = #{ammeterId,jdbcType=INTEGER},
      active_energy = #{activeEnergy,jdbcType=VARCHAR},
      reactive_energy = #{reactiveEnergy,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>